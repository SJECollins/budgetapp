# Generated by Django 4.2.7 on 2023-11-25 15:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter an account name (e.g. Current, Savings, BOI, Revolut, etc.)', max_length=50)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, help_text='Optionally, enter an account balance.', max_digits=10, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a category name (e.g. Groceries, Rent, etc.)', max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('last_run', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of transaction.', max_digits=10)),
                ('income_or_expense', models.CharField(choices=[('Income', 'Income'), ('Expense', 'Expense')], help_text='Choose whether this is an income or an expense.', max_length=50)),
                ('date', models.DateField(blank=True, help_text='Date of transaction. If left blank, will default to today.', null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(blank=True, help_text='Optionally, add a short description.', max_length=180)),
                ('new_category', models.CharField(blank=True, help_text='Optionally, add a new category for this transaction.', max_length=50)),
                ('recurring', models.BooleanField(default=False, help_text='Check this box if this transaction is recurring.')),
                ('interval', models.CharField(blank=True, choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly')], help_text='If this transaction is recurring, choose the interval.', max_length=50, null=True)),
                ('due_date', models.DateField(blank=True, help_text='If this transaction is recurring, choose the due date.', null=True)),
                ('new_transaction_created', models.BooleanField(default=False, help_text='This field is used internally to determine whether a new transaction should be created.')),
                ('notes', models.TextField(blank=True, help_text='Optionally, add notes for this transaction.')),
                ('account', models.ForeignKey(blank=True, help_text='Choose an account for this transaction.', on_delete=django.db.models.deletion.CASCADE, to='budget.bankaccount')),
                ('category', models.ForeignKey(blank=True, help_text='Choose a category for this transaction.', on_delete=django.db.models.deletion.CASCADE, to='budget.category')),
                ('previous_transaction', models.ForeignKey(blank=True, help_text='This field is used internally to link recurring transactions.', null=True, on_delete=django.db.models.deletion.CASCADE, to='budget.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpendingBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Spending Budget', help_text='Enter a budget name (e.g. Groceries, Rent, etc.)', max_length=50)),
                ('description', models.CharField(blank=True, help_text='Optionally, add a short description.', max_length=180)),
                ('goal_amount', models.DecimalField(decimal_places=2, help_text='Amount of budget.', max_digits=10)),
                ('interval', models.CharField(blank=True, choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly')], help_text='Optionally, choose an interval for this budget (e.g. Weekly, Monthly, etc.)', max_length=50, null=True)),
                ('start_date', models.DateField(blank=True, help_text='Optionally, choose a start date for this budget.', null=True)),
                ('end_date', models.DateField(blank=True, help_text='Optionally, choose an end date for this budget.', null=True)),
                ('notes', models.TextField(blank=True, help_text='Optionally, add notes for this budget.')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(blank=True, help_text='Optionally, choose an account for this budget.', on_delete=django.db.models.deletion.CASCADE, to='budget.bankaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SavingsGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Savings', help_text="Goal name, leave blank for to default to 'Savings'", max_length=50)),
                ('description', models.CharField(blank=True, help_text='Optionally, add a short description.', max_length=180)),
                ('goal_amount', models.DecimalField(decimal_places=2, help_text='Amount of goal.', max_digits=10)),
                ('interval', models.CharField(choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly')], default='Custom', help_text='Optionally, choose an interval for this goal (e.g. Weekly, Monthly, etc.)', max_length=50)),
                ('start_date', models.DateField(blank=True, help_text='Optionally, choose a start date for this goal.', null=True)),
                ('target_date', models.DateField(blank=True, help_text='Optionally, choose a target date for this goal.', null=True)),
                ('notes', models.TextField(blank=True, help_text='Optionally, add notes for this goal.')),
                ('account', models.ForeignKey(blank=True, help_text='Optionally, choose an account for this goal.', on_delete=django.db.models.deletion.CASCADE, to='budget.bankaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
